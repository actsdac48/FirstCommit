1.

mysql> delimiter //
mysql> drop function if exists Total;
    -> create function Total(x decimal(7,2),y decimal(7,2)) returns decimal(7,2)
    -> begin
    -> declare a decimal(7,2);
    -> set a = x + ifnull(y,0);
    -> return a;
    -> end //
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql>
mysql>
mysql> select ename, sal, comm, Total(sal,comm) from emp;
+--------+------+------+-----------------+
| ename  | sal  | comm | Total(sal,comm) |
+--------+------+------+-----------------+
| SMITH  |  800 | NULL |          800.00 |
| ALLEN  | 1600 |  300 |         1900.00 |
| WARD   | 1250 |  500 |         1750.00 |
| JONES  | 2975 | NULL |         2975.00 |
| MARTIN | 1250 | 1400 |         2650.00 |
| BLAKE  | 2850 | NULL |         2850.00 |
| CLARK  | 2450 | NULL |         2450.00 |
| SCOTT  | 3000 | NULL |         3000.00 |
| KING   | 5000 | NULL |         5000.00 |
| TURNER | 1500 |    0 |         1500.00 |
| ADAMS  | 1100 | NULL |         1100.00 |
| JAMES  |  950 | NULL |          950.00 |
| FORD   | 3000 | NULL |         3000.00 |
| MILLER | 1300 | NULL |         1300.00 |
+--------+------+------+-----------------+
14 rows in set (0.00 sec)


2.
mysql> delimiter //
mysql> drop function if exists retMail;
    -> create function retMail(x varchar(10), y varchar(9)) returns varchar(20)
    -> begin
    -> declare a varchar(20);
    -> set a = concat(substring(x, 1,2), substr(y, -2, 2), "@knowit.com");
    -> return a;
    -> end //
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

mysql>
mysql> delimiter ;
mysql>
mysql> select ename, job, retMail(ename, job) from emp;
+--------+-----------+---------------------+
| ename  | job       | retMail(ename, job) |
+--------+-----------+---------------------+
| SMITH  | CLERK     | SMRK@knowit.com     |
| ALLEN  | SALESMAN  | ALAN@knowit.com     |
| WARD   | SALESMAN  | WAAN@knowit.com     |
| JONES  | MANAGER   | JOER@knowit.com     |
| MARTIN | SALESMAN  | MAAN@knowit.com     |
| BLAKE  | MANAGER   | BLER@knowit.com     |
| CLARK  | MANAGER   | CLER@knowit.com     |
| SCOTT  | ANALYST   | SCST@knowit.com     |
| KING   | PRESIDENT | KINT@knowit.com     |
| TURNER | SALESMAN  | TUAN@knowit.com     |
| ADAMS  | CLERK     | ADRK@knowit.com     |
| JAMES  | CLERK     | JARK@knowit.com     |
| FORD   | ANALYST   | FOST@knowit.com     |
| MILLER | CLERK     | MIRK@knowit.com     |
+--------+-----------+---------------------+
14 rows in set (0.00 sec)










3.


mysql>   delimiter //
mysql> create function cal_sal(Kaam varchar(9)) returns decimal(7,2)
    -> begin
    -> declare a decimal(7,2);
    -> set a = (select max(sal) from emp where job=Kaam);
    -> return a;
    -> end //
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;

mysql> delimiter //
mysql> drop procedure if exists MaxSal;
    -> create procedure MaxSal(in x varchar(9), out y decimal(7,2))
    -> begin
    -> set y = cal_sal(x);
    -> end //
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> set @a="MANAGER";
Query OK, 0 rows affected (0.00 sec)

mysql> call MaxSal(@a,@b);
Query OK, 0 rows affected (0.00 sec)

mysql> select @b;
+---------+
| @b      |
+---------+
| 2975.00 |
+---------+
1 row in set (0.00 sec)

mysql> select max(sal) from emp where job='manager';
+----------+
| max(sal) |
+----------+
|     2975 |
+----------+
1 row in set (0.00 sec)

4.

mysql> delimiter //
mysql> drop procedure if exists findDept;
    -> create procedure findDept()
    -> begin
    ->     -- 1. All variable declarations must be first
    ->     declare a int;
    ->     declare b varchar(10);
    ->     declare c int;
    ->     declare flag1 int default 1;
    ->
    ->     -- 2. Then, cursor declarations
    ->     declare cur1 cursor for select empno, ename, deptno from EMP where deptno=20;
    ->
    ->     -- 3. Then, handler declarations
    ->     declare continue handler for not found set flag1=0;
    ->
    ->     open cur1;
    ->
    ->     print_loop: loop
    ->         fetch cur1 into a, b, c;
    ->         if flag1 = 0 then
    ->             leave print_loop;
    ->         end if;
    ->         select a, b, c;
    ->     end loop;
    ->
    ->     close cur1;
    -> end //
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call findDept();
+------+-------+------+
| a    | b     | c    |
+------+-------+------+
| 7369 | SMITH |   20 |
+------+-------+------+
1 row in set (0.00 sec)

+------+-------+------+
| a    | b     | c    |
+------+-------+------+
| 7566 | JONES |   20 |
+------+-------+------+
1 row in set (0.01 sec)

+------+-------+------+
| a    | b     | c    |
+------+-------+------+
| 7788 | SCOTT |   20 |
+------+-------+------+
1 row in set (0.01 sec)

+------+-------+------+
| a    | b     | c    |
+------+-------+------+
| 7876 | ADAMS |   20 |
+------+-------+------+
1 row in set (0.02 sec)

+------+------+------+
| a    | b    | c    |
+------+------+------+
| 7902 | FORD |   20 |
+------+------+------+
1 row in set (0.03 sec)

Query OK, 0 rows affected (0.03 sec)

5.
mysql> delimiter //
mysql> drop procedure if exists increSal;
    -> create procedure increSal()
    -> begin
    -> declare a int;
    -> declare b varchar(10);
    -> declare c varchar(9);
    -> declare d decimal(7,2);
    ->
    -> declare flag1 int default 0;
    ->
    -> declare cur2 cursor for select empno, ename, job, sal from EMP;
    ->
    -> declare continue handler for not found set flag1=1;
    ->
    -> open cur2;
    -> increm:loop
    -> fetch cur2 into a,b,c,d;
    -> if flag1=1 then
    -> leave increm;
    -> end if;
    -> if c="CLERK" then
    -> set d = d+d*0.1;
    -> end if;
    -> if c="MANAGER" then
    -> set d = d+d*0.05;
    -> end if;
    -> if c="ANALYST" then
    -> set d = d+d*0.07;
    -> end if;
    -> select a,b,c,d;
    -> end loop;
    -> close cur2;
    -> end //
	
    -> end //
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call increSal();
+------+-------+-------+--------+
| a    | b     | c     | d      |
+------+-------+-------+--------+
| 7369 | SMITH | CLERK | 880.00 |
+------+-------+-------+--------+
1 row in set (0.00 sec)

+------+-------+----------+---------+
| a    | b     | c        | d       |
+------+-------+----------+---------+
| 7499 | ALLEN | SALESMAN | 1600.00 |
+------+-------+----------+---------+
1 row in set (0.01 sec)

+------+------+----------+---------+
| a    | b    | c        | d       |
+------+------+----------+---------+
| 7521 | WARD | SALESMAN | 1250.00 |
+------+------+----------+---------+
1 row in set (0.01 sec)

+------+-------+---------+---------+
| a    | b     | c       | d       |
+------+-------+---------+---------+
| 7566 | JONES | MANAGER | 3123.75 |
+------+-------+---------+---------+
1 row in set (0.01 sec)

+------+--------+----------+---------+
| a    | b      | c        | d       |
+------+--------+----------+---------+
| 7654 | MARTIN | SALESMAN | 1250.00 |
+------+--------+----------+---------+
1 row in set (0.02 sec)

+------+-------+---------+---------+
| a    | b     | c       | d       |
+------+-------+---------+---------+
| 7698 | BLAKE | MANAGER | 2992.50 |
+------+-------+---------+---------+
1 row in set (0.02 sec)

+------+-------+---------+---------+
| a    | b     | c       | d       |
+------+-------+---------+---------+
| 7782 | CLARK | MANAGER | 2572.50 |
+------+-------+---------+---------+
1 row in set (0.03 sec)

+------+-------+---------+---------+
| a    | b     | c       | d       |
+------+-------+---------+---------+
| 7788 | SCOTT | ANALYST | 3210.00 |
+------+-------+---------+---------+
1 row in set (0.03 sec)

+------+------+-----------+---------+
| a    | b    | c         | d       |
+------+------+-----------+---------+
| 7839 | KING | PRESIDENT | 5000.00 |
+------+------+-----------+---------+
1 row in set (0.04 sec)

+------+--------+----------+---------+
| a    | b      | c        | d       |
+------+--------+----------+---------+
| 7844 | TURNER | SALESMAN | 1500.00 |
+------+--------+----------+---------+
1 row in set (0.04 sec)

+------+-------+-------+---------+
| a    | b     | c     | d       |
+------+-------+-------+---------+
| 7876 | ADAMS | CLERK | 1210.00 |
+------+-------+-------+---------+
1 row in set (0.05 sec)

+------+-------+-------+---------+
| a    | b     | c     | d       |
+------+-------+-------+---------+
| 7900 | JAMES | CLERK | 1045.00 |
+------+-------+-------+---------+
1 row in set (0.05 sec)

+------+------+---------+---------+
| a    | b    | c       | d       |
+------+------+---------+---------+
| 7902 | FORD | ANALYST | 3210.00 |
+------+------+---------+---------+
1 row in set (0.05 sec)

+------+--------+-------+---------+
| a    | b      | c     | d       |
+------+--------+-------+---------+
| 7934 | MILLER | CLERK | 1430.00 |
+------+--------+-------+---------+
1 row in set (0.06 sec)

Query OK, 0 rows affected (0.06 sec)
			




6.

mysql> delimiter //
mysql> drop procedure if exists displayEMP;
    -> create procedure displayEMP(in kaam varchar(9))
    -> begin
    -> declare a int ;
    -> declare b varchar(10);
    -> declare c varchar(9);
    -> declare f int default 0;
    ->
    -> declare disp cursor for select empno, ename, job from emp where job= kaam;
    -> declare continue handler for not found set f=1;
    -> open disp;
    -> displa:loop
    -> fetch disp into a,b,c;
    -> if f=1
    -> then
    -> leave displa;
    -> end if;
    -> select a,b,c;
    -> end loop;
    -> close disp;
    -> end //
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;

mysql> call displayEMP("MANAGER");
+------+-------+---------+
| a    | b     | c       |
+------+-------+---------+
| 7566 | JONES | MANAGER |
+------+-------+---------+
1 row in set (0.00 sec)

+------+-------+---------+
| a    | b     | c       |
+------+-------+---------+
| 7698 | BLAKE | MANAGER |
+------+-------+---------+
1 row in set (0.01 sec)

+------+-------+---------+
| a    | b     | c       |
+------+-------+---------+
| 7782 | CLARK | MANAGER |
+------+-------+---------+
1 row in set (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

7.


mysql> create table emp_new as select * from emp;

mysql> select * from emp_new;
+-------+--------+-----------+------+------------+------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+--------+-----------+------+------------+------+------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800 | NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600 |  300 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250 |  500 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975 | NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250 | 1400 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850 | NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000 | NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500 |    0 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100 | NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950 | NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000 | NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300 | NULL |     10 |
+-------+--------+-----------+------+------------+------+------+--------+
14 rows in set (0.00 sec)

mysql> delimiter //
mysql> drop procedure if exists setaward;
    -> create procedure setaward()
    -> begin
    -> declare a varchar(10);
    -> declare b date;
    -> declare c varchar(5);
    ->
    -> declare flag1 int default 0;
    ->
    -> declare cur3 cursor for select ename, hiredate, award from emp_new;
    ->
    -> declare continue handler for not found set flag1=1;
    ->
    -> open cur3;
    -> awards:loop
    -> fetch cur3 into a,b,c;
    -> if flag1=1 then
    -> leave awards;
    -> end if;
    -> if (curdate()-year(b)>42) then
    -> set c = "YES";
    -> end if;
    -> if (curdate()-year(b)<42) then
    -> set c = "NO";
    -> end if;
    -> select a,b,c;
    -> end loop;
    -> close cur3;
    -> end
    -> //
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> call setawards();
    -> //
ERROR 1305 (42000): PROCEDURE msql.setawards does not exist
mysql> delimiter ;
mysql> call setaward();
+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| SMITH | 1980-12-17 | YES  |
+-------+------------+------+
1 row in set (0.00 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| ALLEN | 1981-02-20 | YES  |
+-------+------------+------+
1 row in set (0.01 sec)

+------+------------+------+
| a    | b          | c    |
+------+------------+------+
| WARD | 1981-02-22 | YES  |
+------+------------+------+
1 row in set (0.01 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| JONES | 1981-04-02 | YES  |
+-------+------------+------+
1 row in set (0.01 sec)

+--------+------------+------+
| a      | b          | c    |
+--------+------------+------+
| MARTIN | 1981-09-28 | YES  |
+--------+------------+------+
1 row in set (0.02 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| BLAKE | 1981-05-01 | YES  |
+-------+------------+------+
1 row in set (0.02 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| CLARK | 1981-06-09 | YES  |
+-------+------------+------+
1 row in set (0.03 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| SCOTT | 1982-12-09 | YES  |
+-------+------------+------+
1 row in set (0.03 sec)

+------+------------+------+
| a    | b          | c    |
+------+------------+------+
| KING | 1981-11-17 | YES  |
+------+------------+------+
1 row in set (0.04 sec)

+--------+------------+------+
| a      | b          | c    |
+--------+------------+------+
| TURNER | 1981-09-08 | YES  |
+--------+------------+------+
1 row in set (0.04 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| ADAMS | 1983-01-12 | YES  |
+-------+------------+------+
1 row in set (0.05 sec)

+-------+------------+------+
| a     | b          | c    |
+-------+------------+------+
| JAMES | 1981-12-03 | YES  |
+-------+------------+------+
1 row in set (0.05 sec)

+------+------------+------+
| a    | b          | c    |
+------+------------+------+
| FORD | 1981-12-03 | YES  |
+------+------------+------+
1 row in set (0.05 sec)

+--------+------------+------+
| a      | b          | c    |
+--------+------------+------+
| MILLER | 1982-01-23 | YES  |
+--------+------------+------+
1 row in set (0.06 sec)

Query OK, 0 rows affected (0.06 sec)

8.
mysql> delimiter //
mysql> drop trigger if exists my_trigger;
    -> create trigger my_trigger
    -> AFTER INSERT
    -> ON product
    -> FOR EACH ROW
    -> BEGIN
    ->     insert into product_detail(pid, amt) values(NEW.pid, NEW.qty * NEW.price);
    -> END;
    -> //
Query OK, 0 rows affected (0.01 sec)

Query OK, 0 rows affected (0.02 sec)

mysql> delimiter ;
mysql> insert into product(pid, pname, qty, price, cid, sid) values(146, 'Bingo', 50, 50.00, 1, 12);
Query OK, 1 row affected (0.01 sec)

mysql> select * from product_detail;
+------+---------+
| pid  | amt     |
+------+---------+
|  145 |   30.00 |
|  146 | 2500.00 |
+------+---------+
2 rows in set (0.00 sec)







9. Consider following table
   emp_wage (eno, ename ,sal,over_time)
   eno : pk auto inc
Write a trigger which will insert over_time as 400 if value over_time entered is null.    

mysql> drop trigger if exists tri_overt;
    -> create trigger tri_overt
    -> before insert
    -> on emp_wage
    -> for each row
    -> begin
    ->
    -> if new.over_time is null
    -> then
    ->      set new.over_time=400;
    -> end if;
    ->
    ->
    -> end //
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.02 sec)

mysql> delimiter ;
mysql> insert into emp_wage(ename, sal) values('klsdfhg', 7885);
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp_wage;
+-----+---------+---------+-----------+
| eno | ename   | sal     | over_time |
+-----+---------+---------+-----------+
|   1 | klsdfhg | 7885.00 |      NULL |
|   2 | klsdfhg | 7885.00 |       400 |
+-----+---------+---------+-----------+
2 rows in set (0.00 sec)







10. Consider following table
      order_master(oid,pname,qty,price)
      oid : pk auto inc
      order_log(oid,odate,amt)
	Write a trigger which will create a log of all orders once order is placed.



mysql> insert into order_master(pname,qty,price)
    -> values('pen',120,10),('eraser',80,15);
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> create table order_log
    -> (oid int,
    ->  order_dat date,
    ->  amt float(8,2)
    -> );
Query OK, 0 rows affected, 1 warning (0.02 sec)


mysql> delimiter //
mysql> drop trigger if exists after_insert_order;
    -> create trigger after_insert_order
    -> after insert
    -> on order_master
    -> for each row
    -> begin
    ->    declare p float(8,2);
    ->    set p = new.qty * new.price;
    ->    insert into order_log
    ->    values(new.oid,curdate(),p);
    -> end //
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected, 1 warning (0.01 sec)

mysql> delimiter ;

mysql> insert into order_master(pname,qty,price)
    -> values('lays',98,50),('dairy milk',25,100);
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> select * from order_log;
+------+------------+---------+
| oid  | order_dat  | amt     |
+------+------------+---------+
|    3 | 2025-09-22 | 4900.00 |
|    4 | 2025-09-22 | 2500.00 |
+------+------------+---------+
2 rows in set (0.00 sec)








11. Consider following table
      cust_master(cid,cname,accno,city)
     cust_details(cid,deleted_date)
Write a trigger which will save the information of deleted customer in cust_details table. 



create table cust_master(cid int, cname varchar(15), accno int, city varchar(20));
create table cust_details(cid int, deleted_date date);

delimiter //
drop trigger if exists before_delete;
create trigger before_delete
     before delete
     on cust_master
     for each row
     begin
        
        
        insert into cust_details
        values(old.cid, curdate());
     end //
delimiter ;



mysql> insert into cust_master values(76, 'aniket', 67889089, 'Kolhapur');
Query OK, 1 row affected (0.01 sec)

mysql> select * from cust_master;
+------+--------+----------+----------+
| cid  | cname  | accno    | city     |
+------+--------+----------+----------+
|   76 | aniket | 67889089 | Kolhapur |
+------+--------+----------+----------+
1 row in set (0.00 sec)

mysql> insert into cust_master values(7, 'Chinmay', 67857759, 'Raigad');
Query OK, 1 row affected (0.00 sec)

mysql> select * from cust_master;
+------+---------+----------+----------+
| cid  | cname   | accno    | city     |
+------+---------+----------+----------+
|   76 | aniket  | 67889089 | Kolhapur |
|    7 | Chinmay | 67857759 | Raigad   |
+------+---------+----------+----------+
2 rows in set (0.00 sec)

mysql> select * from cust_details;
Empty set (0.00 sec)

mysql> delete from cust_master where cid=76;
Query OK, 1 row affected (0.01 sec)

mysql> select * from cust_details;
+------+--------------+
| cid  | deleted_date |
+------+--------------+
|   76 | 2025-09-22   |
+------+--------------+
1 row in set (0.00 sec)

mysql> select * from cust_master;
+------+---------+----------+--------+
| cid  | cname   | accno    | city   |
+------+---------+----------+--------+
|    7 | Chinmay | 67857759 | Raigad |
+------+---------+----------+--------+
1 row in set (0.00 sec)








12. Try all triggers done in the class

OK DONE👍🙌







13. Send any number to the procedure. Pass this number to the function. Function should return 1 if the number is prime or 0 if the number is not prime. Return value to the procedure. And display 1 or 0.



delimiter //
drop function if exists prime1;
create function prime1(x int) returns int DETERMINISTIC
begin
	declare i int default 2;
	declare y int default 1;
	if x<=1
	then
	    set y = 0;
	end if;
	if x=2
	then 
	    set y=1;
	end if;
	if x>2
	then
	    while i<(x/2)+1
	    do
		if x%i=0
		then 
		    set y=0;
		end if;
		set i=i+1;
	    end while;
	end if;
	return y;
end //




drop procedure if exists prime_chk;
create procedure prime_chk(in a int, out num int)
begin
	
	set num = prime1(a);
	
end //
delimiter ;





mysql> set @a=6;
Query OK, 0 rows affected (0.00 sec)

mysql> call prime_chk(@a, @n);
Query OK, 0 rows affected (0.00 sec)

mysql> select @n;
+------+
| @n   |
+------+
|    0 |
+------+
1 row in set (0.00 sec)

mysql> set @a=13;
Query OK, 0 rows affected (0.00 sec)

mysql> call prime_chk(@a, @n);
Query OK, 0 rows affected (0.00 sec)

mysql> select @n;
+------+
| @n   |
+------+
|    1 |
+------+
1 row in set (0.00 sec)







1. The HR department wants to know the names of all the employees who were hired after Blake. Create a query to display the name and hire date of any employee hired after employee  Blake.



mysql> select * from emp where hiredate >any (select hiredate from emp where ename='blake');
+-------+--------+-----------+------+------------+------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+--------+-----------+------+------------+------+------+--------+
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250 | 1400 |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000 | NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500 |    0 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100 | NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950 | NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000 | NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300 | NULL |     10 |
+-------+--------+-----------+------+------------+------+------+--------+
9 rows in set (0.00 sec)







2. Write a query to get  year, and number of employees joined each year.


mysql> select distinct year(hiredate) year, count(*) over(partition by year(hiredate)) 'no. of employee joined each year' from emp;
+------+----------------------------------+
| year | no. of employee joined each year |
+------+----------------------------------+
| 1980 |                                1 |
| 1981 |                               10 |
| 1982 |                                2 |
| 1983 |                                1 |
+------+----------------------------------+
4 rows in set (0.00 sec)








3. Write a query to display all employees with experience more than 43 years.



mysql> select e.*, floor(datediff(curdate(), hiredate)/365) experience from emp e where floor(datediff(curdate(), hiredate)/365) > 43;
+-------+--------+----------+------+------------+------+------+--------+------------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL  | COMM | DEPTNO | experience |
+-------+--------+----------+------+------------+------+------+--------+------------+
|  7369 | SMITH  | CLERK    | 7902 | 1980-12-17 |  800 | NULL |     20 |         44 |
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600 |  300 |     30 |         44 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250 |  500 |     30 |         44 |
|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975 | NULL |     20 |         44 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250 | 1400 |     30 |         44 |
|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850 | NULL |     30 |         44 |
|  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450 | NULL |     10 |         44 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500 |    0 |     30 |         44 |
+-------+--------+----------+------+------------+------+------+--------+------------+
8 rows in set (0.00 sec)











4. Display 3rd highest salary.


mysql> select * from emp e where 2=(select count(distinct sal) from emp e1 where e1.sal>e.sal);
+-------+-------+---------+------+------------+------+------+--------+
| EMPNO | ENAME | JOB     | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+-------+---------+------+------------+------+------+--------+
|  7566 | JONES | MANAGER | 7839 | 1981-04-02 | 2975 | NULL |     20 |
+-------+-------+---------+------+------------+------+------+--------+
1 row in set (0.00 sec)










5. Write a query which will display all employees working in sales department.



mysql> select * from emp where deptno in (select deptno from dept where dname='sales');
+-------+--------+----------+------+------------+------+------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+--------+----------+------+------------+------+------+--------+
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600 |  300 |     30 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250 |  500 |     30 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250 | 1400 |     30 |
|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850 | NULL |     30 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500 |    0 |     30 |
|  7900 | JAMES  | CLERK    | 7698 | 1981-12-03 |  950 | NULL |     30 |
+-------+--------+----------+------+------------+------+------+--------+
6 rows in set (0.00 sec)









6. Write a query to display year if more than 2 employees are hired in that year.



mysql> select distinct year(hiredate), count(*) 'no. of employee' from emp group by year(hiredate) having count(year(hiredate))>2;
+----------------+-----------------+
| year(hiredate) | no. of employee |
+----------------+-----------------+
|           1981 |              10 |
+----------------+-----------------+
1 row in set (0.00 sec)





import java.io.*;
import java.time.LocalDate;
import java.util.*;
import java.util.stream.Collectors;

public class EmployeeManager {
    private List<Employee> employees;
    private static final String FILE_NAME = "text.txt";

    public EmployeeManager() {
        employees = loadEmployees();
    }

    public void addEmployee(Employee emp) throws EmployeeException {
        for (Employee e : employees) {
            if (e.getEmployeeId() == emp.getEmployeeId()) {
                throw new EmployeeException("Employee ID already exists.");
            }
        }
        employees.add(emp);
        saveEmployees();
    }

    public void displayAllEmployees() {
        employees.forEach(System.out::println);
    }

    public void displayEmployeesByDept(Dept dept) {
        employees.stream()
                .filter(e -> e.getDept() == dept)
                .forEach(System.out::println);
    }

    public void displayDeptWiseCount() {
        Map<Dept, Long> countMap = employees.stream()
                .collect(Collectors.groupingBy(Employee::getDept, Collectors.counting()));
        countMap.forEach((d, c) -> System.out.println(d + ": " + c));
    }

    public void sortByJoiningDate() {
        employees.sort(Comparator.comparing(Employee::getJoiningDate));
        displayAllEmployees();
    }

    private void saveEmployees() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FILE_NAME))) {
            oos.writeObject(employees);
        } catch (IOException e) {
            System.out.println("Error saving employees: " + e.getMessage());
        }
    }

    @SuppressWarnings("unchecked")
    private List<Employee> loadEmployees() {
        File file = new File(FILE_NAME);
        if (!file.exists()) return new ArrayList<>();
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(FILE_NAME))) {
            return (List<Employee>) ois.readObject();
        } catch (Exception e) {
            System.out.println("Error loading employees: " + e.getMessage());
            return new ArrayList<>();
        }
    }
}

package transaction;


import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.function.Predicate;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class Entry {
	
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		ArrayList<Transaction> trnsCollecton = new ArrayList<Transaction>();

		int loop = 0;

		while(loop < 3) {

			System.out.println("Enter transaction number :");
			int txI = sc.nextInt();

			LocalDateTime d = LocalDateTime.now();

			System.out.println("Enter transaction Amount :");
			float txAmount = sc.nextInt();

			System.out.println("Enter transaction status (1 for true or 0 for false) :"); 
			int txStatus = sc.nextInt(); 
			boolean bool = true; 
			if(txStatus > 0) 
				bool = false; 
			System.out.println("Enter transaction Arrears status (1 for true or 0 for false) :"); 
			int txArrears = sc.nextInt(); 
			boolean boolArrears = true;
			if(txArrears > 0) 
				boolArrears = false;

			Transaction ob = new Transaction(txI, d, txAmount, bool, boolArrears);

			trnsCollecton.add(ob);

			loop++;
		}


		System.out.println("\n----- All Transactions -----");
		for(Transaction data : trnsCollecton)
		{
			System.out.println(data);
		}



		Predicate<Transaction> highVal = transaction -> transaction.txAmount > 5000;
		
		List<Transaction> highValTx = trnsCollecton.stream().filter(highVal).collect(Collectors.toList());
		
		System.out.println("\n----- All Transactions with txAmount > 5000 -----");
		for(Transaction data : highValTx)
		{
			System.out.println(data);
		}

	}

}
